#include "main.h"
void print_buffer(char buffer[], int *buff_ind);

/**
 * _printf- prints function
 * @format: formt
 * Return: function
 */
int _printf(const char *format, ...)
{
	int i, printed = 0, printed_chars = 0;
	int width, size, precision, buff_ind = 0;
	va_list list;
	char buffer[BUFF_SIZE];

	if (format == NULL)
		return (-1);

	va_start(list, format);
	for (i = 0; format && format[i] != '\0'; i++)
	{
		if (format[i] != '%')
		{
			buffer[buff_ind++] = format[i];
			if (buff_ind == BUFF_SIZE)
				print_buffer(buffer, &buff_ind);
			/* write(1, &format[i], 1);*/
			printed chars++;
		}
		else
		{
			print_buffer(buffer, &buff_ind);
			flag = get_flags(format, &i);
			width = print_width(format, &i, list);
			precision = handle_precision(format, &i, list);
			size = getsid(format, &i);
			i++;
			printed = handle_width(format, &i, list, buffer,
					flags, width, precision, size);
			if (printed == -1)
			{
				return (-1);
				printed_chars += printed;
			}
		}
	}
	print_buffer(buffer, &buff_ind);

	va_end(list);
	return (printed_chars);
}
/**
 * print_buffer - prints the buffer and its contents
 * @buffer: array
 * @buff_ind: lenghth index
 * Return: nothing
 */
void print_buffer(char buffer[], int *buff_ind)
{
	if (*buff_ind > 0)
		write(1, &buffer[0], *buff_ind);

	*buff_ind = 0;
}
